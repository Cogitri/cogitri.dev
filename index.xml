<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cogitri&#39;s blog</title>
    <link>https://cogitri.dev/</link>
    <description>Recent content on Cogitri&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Sun, 02 Feb 2020 06:07:10 +0100</lastBuildDate>
    
	<atom:link href="https://cogitri.dev/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Booting Alpine Linux with a Unified Kernel Image and Secure Boot</title>
      <link>https://cogitri.dev/post/04-secure-boot-with-unified-kernel-image/</link>
      <pubDate>Sun, 02 Feb 2020 06:07:10 +0100</pubDate>
      
      <guid>https://cogitri.dev/post/04-secure-boot-with-unified-kernel-image/</guid>
      <description>Introduction  Guest article by maxice8
 Recently I got myself into package sd-boot from the Systemd project into Alpine Linux. I previously packaged it as an April&amp;rsquo;s fools joke for Void Linux Here.
After receiving some negative feedback on including it, more specifically about the fact I had to include 23 patches (which could be trimmed but would be more work than just copying the work of the OpenEmbedded and NixOS Musl people) to make it compile.</description>
    </item>
    
    <item>
      <title>Using KeePassXC as your system-keyring and ssh-agent</title>
      <link>https://cogitri.dev/post/03-keepassxc-freedesktop-secret/</link>
      <pubDate>Mon, 04 Nov 2019 11:33:37 -0300</pubDate>
      
      <guid>https://cogitri.dev/post/03-keepassxc-freedesktop-secret/</guid>
      <description>Introduction  Guest article by maxice8
 Recently the community-oriented password manager KeePassXC made a new major release, 2.5.0.
In this new release there was a really important change, the implementation of the secrets API from Freedesktop.
 This is oversimplified
 For those that don&amp;rsquo;t know, the secrets API is a specification for storing and querying secrets (duh) like passwords, tokens and ssh keys, and really anything you wanted.</description>
    </item>
    
    <item>
      <title>Contributing to Alpine Linux: making Merge Requests</title>
      <link>https://cogitri.dev/post/02-gitlab-alpinelinux-v4-api/</link>
      <pubDate>Tue, 29 Oct 2019 11:28:05 -0300</pubDate>
      
      <guid>https://cogitri.dev/post/02-gitlab-alpinelinux-v4-api/</guid>
      <description>Introduction  Guest article by maxice8
 Some time ago, Alpine Linux started using their self-hosted GitLab instance to accept contributions via merge requests.
I wanted to move to it immediately as using their GitLab instance is planned to be the main repo (it is currently a mirror to git.alpinelinux.org).
How it was before Before using their GitLab instance I used their GitHub repo to contribute, I would use the amazing hub tool, which after login with my personal access token would allow me to easily check out pull requests and merge them from the CLI.</description>
    </item>
    
    <item>
      <title>Introducing tmplgen</title>
      <link>https://cogitri.dev/post/01-introducing-tmplgen/</link>
      <pubDate>Sun, 03 Feb 2019 22:00:58 +0100</pubDate>
      
      <guid>https://cogitri.dev/post/01-introducing-tmplgen/</guid>
      <description>Introduction Some time ago maxice8 had told me about gemnator, a simple script written in SH to generate Void Linux build template files for Ruby Gems. It pulls the neccessary data (e.g. the newest version, dependencies etc.) from the rubygems.org API and generates a ready to use template from it. I really liked the idea and wanted to improve on it, e.g. by adding more sources to query (such as crates.</description>
    </item>
    
  </channel>
</rss>